/* -*- c++ -*- */
/*
 * Copyright (C) 2016  Andy Walls <awalls.cx18@gmail.com>
 *
 * This file was automatically generated by gr_modtool from GNU Radio
 *
 * This file was automatically generated from a template incorporating
 * data input by Andy Walls.
 * See http://www.gnu.org/licenses/gpl-faq.en.html#GPLOutput .
 */

#ifndef INCLUDED_NWR_LMS_DA_EQUALIZER_FF_IMPL_H
#define INCLUDED_NWR_LMS_DA_EQUALIZER_FF_IMPL_H

#include <nwr/lms_da_equalizer_ff.h>
#include <gnuradio/filter/fir_filter.h>
#include <stdexcept>

namespace gr {
  namespace nwr {

    class lms_da_equalizer_ff_impl
       : public lms_da_equalizer_ff, filter::kernel::fir_filter_fff
    {
     private:
      pmt::pmt_t d_sync_tag_key;

      std::vector<float> d_new_taps;
      bool d_updated;

      float d_mu;
      std::vector<float> d_training_samples;

      float d_error;

      void reinit_taps(void);
      float a_priori_error(unsigned int i, float y);
      void update_tap(float &tap, const float x);
      void filter_no_adapt(float *out, const float *in, unsigned int len);
      void filter_and_adapt(float *out, const float *in, unsigned int len);

      static bool p_tag_compare(const tag_t &a, const tag_t &b);
      void prune_sync_tags(std::vector<tag_t> p_tags);

     public:
      lms_da_equalizer_ff_impl(const std::vector<float> &training_samples,
                               const std::string &sync_tag,
                               unsigned int num_taps,
                               float mu);
      ~lms_da_equalizer_ff_impl();

      int work(int noutput_items,
         gr_vector_const_void_star &input_items,
         gr_vector_void_star &output_items);

      void set_taps(const std::vector<float> &taps);
      std::vector<float> taps() const;

      float gain() const { return d_mu; }
      void set_gain(float mu)
      {
        if (mu < 0.0f) 
          throw std::out_of_range(
            "lms_da_equalizer_ff::set_gain: mu must be greater than 0");
        d_mu = mu;
      }

    };

  } // namespace nwr
} // namespace gr

#endif /* INCLUDED_NWR_LMS_DA_EQUALIZER_FF_IMPL_H */

