/* -*- c++ -*- */
/*
 * Copyright (C) 2016  Andy Walls <awalls.cx18@gmail.com>
 *
 * This file was automatically generated by gr_modtool from GNU Radio
 *
 * This file was automatically generated from a template incorporating
 * data input by Andy Walls and later hand edited by Andy Walls.
 * See http://www.gnu.org/licenses/gpl-faq.en.html#GPLOutput .
 */

#ifndef INCLUDED_NWR_SAME_BURST_DECODER_H
#define INCLUDED_NWR_SAME_BURST_DECODER_H

#include <nwr/api.h>
#include <gnuradio/sync_block.h>

namespace gr {
  namespace nwr {

    /*!
     * \brief SAME Burst Decoder
     * \ingroup nwr
     *
     * \details
     * This block takes on input delimited bursts of soft bits corresponding to
     * a received SAME message.  This decodes the burst, and outputs the burst
     * in a number of forms in messages containing:
     *    printable ASCII
     *    properly aligned bytes
     *    hard bits
     *    soft bits
     *
     * The format of NWR Specific Area Message Encoding (SAME) messages
     * is documented here:
     * http://www.nws.noaa.gov/nwr/info/nwrsame.html
     */
    class NWR_API same_burst_decoder : virtual public gr::sync_block
    {
     public:
      typedef boost::shared_ptr<same_burst_decoder> sptr;

      /*!
       * \brief Make a SAME burst decoder block
       *
       * \param sob_key  Tag name that indicates the start of a burst
       * \param eob_key  Tag name that indicates the end of a burst
       */
      static sptr make(const std::string &sob_key = "rx_sob",
                       const std::string &eob_key = "rx_eob");
    };

  } // namespace nwr
} // namespace gr

#endif /* INCLUDED_NWR_SAME_BURST_DECODER_H */

